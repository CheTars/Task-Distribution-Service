# Generated by Django 4.0.4 on 2022-07-30 05:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('surname', models.CharField(blank=True, max_length=255)),
                ('worker_status', models.CharField(choices=[('In team', 'In Team'), ('Bench', 'Bench'), ('Fired', 'Fired')], default='Bench', max_length=7)),
                ('role', models.CharField(choices=[('Worker', 'Worker'), ('Manager', 'Manager'), ('Admin', 'Admin')], default='Worker', max_length=7)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deadline', models.DateTimeField()),
                ('task_status', models.CharField(choices=[('Backlog', 'Backlog'), ('Ready to development', 'Ready To Dev'), ('In progress', 'In Progress'), ('Ready to Quality Assurance', 'Ready To Qa'), ('Production', 'Production')], default='Backlog', max_length=26)),
                ('connection_with_another_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='App.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=255)),
                ('managers', models.ManyToManyField(blank=True, limit_choices_to={'role': 'Manager'}, related_name='team_managers', to='App.customuser')),
                ('workers', models.ManyToManyField(blank=True, limit_choices_to={'role': 'Worker', 'worker_status': 'Bench'}, related_name='team_workers', to='App.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=2550)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaskComments', to='App.customuser')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='App.task')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='image',
            field=models.ManyToManyField(to='App.taskimage'),
        ),
        migrations.AddField(
            model_name='task',
            name='responsible_employee',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_employee', to='App.customuser'),
        ),
        migrations.AddField(
            model_name='task',
            name='responsible_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_team', to='App.team'),
        ),
    ]
